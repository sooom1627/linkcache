---
description: 
globs: 
alwaysApply: false
---
# Feature Documentation Structure

## 📋 概要

各フィーチャーのドキュメント構造と内容の標準化ルール。実装済み機能に特化し、開発者の実用性を重視した構成。

## 🗂️ 標準ドキュメント構成

### Feature Root Level
```
src/features/[feature-name]/
├── README.md           # Feature概要・基本使用方法
└── docs/               # 詳細ドキュメント
    ├── README.md       # 詳細な使用例・トラブルシューティング
    ├── API.md          # API仕様・関数リファレンス
    ├── ARCHITECTURE.md # システム設計・アーキテクチャ
    ├── SECURITY.md     # セキュリティ実装状況
    └── SEQUENCE.md     # データフロー・相互作用の可視化
```

## 📖 各ドキュメントの役割と内容

### 1. Feature Root `README.md`
**対象**: 全開発者
**目的**: フィーチャーの概要把握・クイックスタート

**必須セクション**:
- 📋 概要
- 🎯 実装済み機能
- 🚀 クイックスタート（コード例）
- 📊 データ構造
- 🛠️ 主要なフック・コンポーネント
- 📖 詳細ドキュメント（docsフォルダへの誘導）
- 🔧 依存関係
- 📱 対応プラットフォーム

### 2. `docs/README.md` - 詳細使用方法
**対象**: 実装担当開発者
**目的**: 詳細な使用例・問題解決

**必須セクション**:
- 詳細なコード例（コピー&ペースト可能）
- 高度な使用パターン
- トラブルシューティング
- よくある問題と解決方法
- パフォーマンス設定
- 国際化対応

### 3. `docs/API.md` - API仕様
**対象**: フロントエンド開発者
**目的**: API関数の詳細仕様

**必須セクション**:
- API構造・モジュール構成
- データ型定義
- 実装済みAPI関数（関数ごとの詳細）
- React Query統合パターン
- エラーハンドリング
- パフォーマンス設定

### 4. `docs/ARCHITECTURE.md` - アーキテクチャ設計
**対象**: システム設計者・上級開発者
**目的**: 設計理解・拡張指針

**必須セクション**:
- アーキテクチャ原則
- ディレクトリ構造（実装済み）
- 層別設計詳細
- データフロー設計
- パフォーマンス設計
- 拡張性設計

### 5. `docs/SECURITY.md` - セキュリティ仕様
**対象**: セキュリティ担当者
**目的**: セキュリティ状況把握

**必須セクション**:
- 実装済みセキュリティ対策
- セキュリティ監査状況
- エラー情報の適切な処理
- セキュリティ設定
- 既知の制限事項

### 6. `docs/SEQUENCE.md` - シーケンス図
**対象**: システム設計者・開発者・QAエンジニア
**目的**: データフローと相互作用の可視化

**必須セクション**:
- 基本シーケンス図（Mermaid形式）
- シーケンス詳細説明（フェーズ別）
- 補助シーケンス（個別機能）
- エラーハンドリングシーケンス
- 技術的考慮事項
- テストシナリオ

## ⚠️ 重要な原則

### ❌ 避けるべき内容
- 進捗管理・タスク管理
- Phase分け・将来計画
- 未実装機能の詳細仕様
- 理論的な設計のみ

### ✅ 重視すべき内容
- **実装済み機能の詳細**
- **実際に動作するコード例**
- **現在の実装状況**
- **開発者の実用性**

## 🔄 ドキュメント更新タイミング

1. **新機能追加時**: API.md, ARCHITECTURE.mdを同時更新
2. **セキュリティ対策追加時**: SECURITY.mdを更新
3. **使用方法変更時**: README.mdを更新
4. **リファクタリング時**: 全ドキュメントの整合性確認

## 📏 品質基準

### ファイルサイズ
- Feature Root README.md: 200-400行
- docs/README.md: 200-300行
- docs/API.md: 300-400行
- docs/ARCHITECTURE.md: 300-500行
- docs/SECURITY.md: 300-400行
- docs/SEQUENCE.md: 150-250行

### 必須要素
- [ ] 実用的なコード例
- [ ] TypeScript型定義
- [ ] エラーハンドリング例
- [ ] 最終更新日記載
- [ ] 実装状況明記

## 🎯 成功例

参考実装: [src/features/user-profile](mdc:src/features/user-profile)
- 5ファイル構成での包括的ドキュメント化
- 実装済み機能への特化
- 開発者向け実用性重視
- 実装との整合性確保
- 視覚的データフロー表現
